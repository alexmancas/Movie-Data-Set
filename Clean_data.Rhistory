#Load dara
#Load data
df<-read.csv("https://public.tableau.com/app/sample-data/HollywoodsMostProfitableStories.csv")
#Now the data is loaded, lets take a look
view(df)
#remember case sensitivity
View(df)
#After executing this command, a new window has appeared with the dataset. Here we can see the column names and the rows containing data.
#Now it is time to load up the library in order to sort and clean through the data, and perform analysis techniques.
install.packages("tidyverse")
#Now that the package has been installed, we can go ahead and import the libary.
library(tidyverse)
#Once the library has been imported, we can go ahead and start looking through the dataset. I will start off by checking data types,followed by some data cleaning techniques.
str(df)
colSums(is.na(df))
#The command above searches for missing values in the df. The following command will drop the missing values.
df<-na.omit(df)
#To check whether the values have been dropped or not, we can execute the following command
colSums(is.na(df))
#All missing values haven now been dropped from the df.
#Another step in the data cleaning process is to check for duplicates
dim(df[duplicated(df$Film),])[1]
#To make the df easier to read, we will round off values to 2 decimal places
df$Profitability<-round(df$Profitability.digit=2)
#Watch out for mistakes in the command, like spelling, using wrong signs etc. I will re-write the command now
df$Profitability<-round(df$Profitability, digit=2)
#Now let's see the df
dim(df)
#Checking for outliers is an important step of the data cleaning process. Outliers can be an indicator of bad data
library(ggplot2)
#One way to check for outliers is with boxplots
ggplot(df, aes(x=Profitability, y=Worldwide.Gross))+ geom_boxplot(outlier.colour = "red", outlier.shape = 1)+ scale_x_continuous(labels= scales::comma)+ coord_cartesian(ylim= c(0, 1000))
#A warning message appeared. After some research on the internet I found that this warning message occurs when creating boxplots using a continuous variable on the x-axis. The solution is to inlcude 'group=1' inside the 'aes()' function.
ggplot(df, aes(x=Profitability, y=Worldwide.Gross, group=1))+ geom_boxplot(outlier.colour = "red", outlier.shape = 1)+ scale_x_continuous(labels= scales::comma)+ coord_cartesian(ylim= c(0, 1000))
#As we can see from the boxplot, we have a number of outliers. We will remove them in order to improve the accuracy of the df. After removing the outliers I will create a new subset of the df.
Q1<- quantile(df$Profitability,.25)
Q3<- quantile(df$Profitability,.75)
IQR<- IQR(df$Profitability)
no_outliers<- subset(df,df$Profitability>(Q1-1.5*IQR)& df$Profitability<(Q3+1.5*IQR))
dim(no_outliers)
#Now that we have removed the outliers in the Profitability column, we will repetad the process for the Worldwide.Gross column.
Q1<-quantile(no_outliers$Worldwide.Gross,.25)
Q3<- quantile(no_outliers$Worldwide.Gross,.75)
IQR<- IQR(no_outliers$Worldwide.Gross)
#Now that outliers have been removed from both columns, I will create a new dataframe called df1
df1<-subset(no_outliers, no_outliers$Worldwide.Gross>(Q1-1.5*IQR)& no_outliers$Worldwide.Gross<(Q3+1.5*IQR))
dim(df1)
#Now that the data cleaning process is finished, we can move on to exploring the data through various analysis techniques. Firslty, I will create a scatterplot to determine a relationship between the variables "RottenTomatoes%" and "Lead.Studio". Moreover, I will create a bar chart to show the counts of films in different years.
#scatterplot
ggplot(df1, aes(x=Lead.Studio, y=Rotten.Tomatoes..))+geom_point()+scale_y_continuous(labels=scales::comma)+coord_cartesian(ylim = c(0,110))+theme(axis.text.x=element_text(angle=90))
#bar chart
ggplot(df1, aes(x=Year))+ geom_bar()
#another way to get an understading of the df is to get a summary. a summary will shows us the quartile ranges, mean, median, min and max values
summary(df1)
#Once we have completed the analysis we can export the clean data and create visualisations
#Load data
df<-read.csv("https://public.tableau.com/app/sample-data/HollywoodsMostProfitableStories.csv")
#Now the data is loaded, lets take a look
view(df)
#remember case sensitivity
View(df)
#After executing this command, a new window has appeared with the dataset. Here we can see the column names and the rows containing data.
#Now it is time to load up the library in order to sort and clean through the data, and perform analysis techniques.
install.packages("tidyverse")
#Now that the package has been installed, we can go ahead and import the libary.
library(tidyverse)
#Once the library has been imported, we can go ahead and start looking through the dataset. I will start off by checking data types,followed by some data cleaning techniques.
str(df)
colSums(is.na(df))
#The command above searches for missing values in the df. The following command will drop the missing values.
df<-na.omit(df)
#To check whether the values have been dropped or not, we can execute the following command
colSums(is.na(df))
#All missing values haven now been dropped from the df.
#Another step in the data cleaning process is to check for duplicates
dim(df[duplicated(df$Film),])[1]
#To make the df easier to read, we will round off values to 2 decimal places
df$Profitability<-round(df$Profitability.digit=2)
#Watch out for mistakes in the command, like spelling, using wrong signs etc. I will re-write the command now
df$Profitability<-round(df$Profitability, digit=2)
#Now let's see the df
dim(df)
#Checking for outliers is an important step of the data cleaning process. Outliers can be an indicator of bad data
library(ggplot2)
#One way to check for outliers is with boxplots
ggplot(df, aes(x=Profitability, y=Worldwide.Gross))+ geom_boxplot(outlier.colour = "red", outlier.shape = 1)+ scale_x_continuous(labels= scales::comma)+ coord_cartesian(ylim= c(0, 1000))
#A warning message appeared. After some research on the internet I found that this warning message occurs when creating boxplots using a continuous variable on the x-axis. The solution is to inlcude 'group=1' inside the 'aes()' function.
ggplot(df, aes(x=Profitability, y=Worldwide.Gross, group=1))+ geom_boxplot(outlier.colour = "red", outlier.shape = 1)+ scale_x_continuous(labels= scales::comma)+ coord_cartesian(ylim= c(0, 1000))
#As we can see from the boxplot, we have a number of outliers. We will remove them in order to improve the accuracy of the df. After removing the outliers I will create a new subset of the df.
Q1<- quantile(df$Profitability,.25)
Q3<- quantile(df$Profitability,.75)
IQR<- IQR(df$Profitability)
no_outliers<- subset(df,df$Profitability>(Q1-1.5*IQR)& df$Profitability<(Q3+1.5*IQR))
dim(no_outliers)
#Now that we have removed the outliers in the Profitability column, we will repetad the process for the Worldwide.Gross column.
Q1<-quantile(no_outliers$Worldwide.Gross,.25)
Q3<- quantile(no_outliers$Worldwide.Gross,.75)
IQR<- IQR(no_outliers$Worldwide.Gross)
#Now that outliers have been removed from both columns, I will create a new dataframe called df1
df1<-subset(no_outliers, no_outliers$Worldwide.Gross>(Q1-1.5*IQR)& no_outliers$Worldwide.Gross<(Q3+1.5*IQR))
dim(df1)
#Now that the data cleaning process is finished, we can move on to exploring the data through various analysis techniques. Firslty, I will create a scatterplot to determine a relationship between the variables "RottenTomatoes%" and "Lead.Studio". Moreover, I will create a bar chart to show the counts of films in different years.
#scatterplot
ggplot(df1, aes(x=Lead.Studio, y=Rotten.Tomatoes..))+geom_point()+scale_y_continuous(labels=scales::comma)+coord_cartesian(ylim = c(0,110))+theme(axis.text.x=element_text(angle=90))
#bar chart
ggplot(df1, aes(x=Year))+ geom_bar()
#another way to get an understading of the df is to get a summary. a summary will shows us the quartile ranges, mean, median, min and max values
summary(df1)
#Once we have completed the analysis we can export the clean data and create visualisations
View(df)
#After executing this command, a new window has appeared with the dataset. Here we can see the column names and the rows containing data.
#Now it is time to load up the library in order to sort and clean through the data, and perform analysis techniques.
install.packages("tidyverse")
#Now that the package has been installed, we can go ahead and import the libary.
library(tidyverse)
#Once the library has been imported, we can go ahead and start looking through the dataset. I will start off by checking data types,followed by some data cleaning techniques.
str(df)
colSums(is.na(df))
#The command above searches for missing values in the df. The following command will drop the missing values.
df<-na.omit(df)
#To check whether the values have been dropped or not, we can execute the following command
colSums(is.na(df))
#All missing values haven now been dropped from the df.
#Another step in the data cleaning process is to check for duplicates
dim(df[duplicated(df$Film),])[1]
#To make the df easier to read, we will round off values to 2 decimal places
df$Profitability<-round(df$Profitability, digit=2)
#Now let's see the df
dim(df)
#Checking for outliers is an important step of the data cleaning process. Outliers can be an indicator of bad data
library(ggplot2)
#One way to check for outliers is with boxplots
ggplot(df, aes(x=Profitability, y=Worldwide.Gross))+ geom_boxplot(outlier.colour = "red", outlier.shape = 1)+ scale_x_continuous(labels= scales::comma)+ coord_cartesian(ylim= c(0, 1000))
#A warning message appeared. After some research on the internet I found that this warning message occurs when creating boxplots using a continuous variable on the x-axis. The solution is to inlcude 'group=1' inside the 'aes()' function.
ggplot(df, aes(x=Profitability, y=Worldwide.Gross, group=1))+ geom_boxplot(outlier.colour = "red", outlier.shape = 1)+ scale_x_continuous(labels= scales::comma)+ coord_cartesian(ylim= c(0, 1000))
#As we can see from the boxplot, we have a number of outliers. We will remove them in order to improve the accuracy of the df. After removing the outliers I will create a new subset of the df.
Q1<- quantile(df$Profitability,.25)
Q3<- quantile(df$Profitability,.75)
IQR<- IQR(df$Profitability)
no_outliers<- subset(df,df$Profitability>(Q1-1.5*IQR)& df$Profitability<(Q3+1.5*IQR))
dim(no_outliers)
#Now that we have removed the outliers in the Profitability column, we will repetad the process for the Worldwide.Gross column.
Q1<-quantile(no_outliers$Worldwide.Gross,.25)
Q3<- quantile(no_outliers$Worldwide.Gross,.75)
IQR<- IQR(no_outliers$Worldwide.Gross)
#Now that outliers have been removed from both columns, I will create a new dataframe called df1
df1<-subset(no_outliers, no_outliers$Worldwide.Gross>(Q1-1.5*IQR)& no_outliers$Worldwide.Gross<(Q3+1.5*IQR))
dim(df1)
#Now that the data cleaning process is finished, we can move on to exploring the data through various analysis techniques. Firslty, I will create a scatterplot to determine a relationship between the variables "RottenTomatoes%" and "Lead.Studio". Moreover, I will create a bar chart to show the counts of films in different years.
#scatterplot
ggplot(df1, aes(x=Lead.Studio, y=Rotten.Tomatoes..))+geom_point()+scale_y_continuous(labels=scales::comma)+coord_cartesian(ylim = c(0,110))+theme(axis.text.x=element_text(angle=90))
#bar chart
ggplot(df1, aes(x=Year))+ geom_bar()
#another way to get an understading of the df is to get a summary. a summary will shows us the quartile ranges, mean, median, min and max values
summary(df1)
#Once we have completed the analysis we can export the clean data and create visualisations
#Load data
df<-read.csv("https://public.tableau.com/app/sample-data/HollywoodsMostProfitableStories.csv")
#Now the data is loaded, lets take a look
#After executing this command, a new window has appeared with the dataset. Here we can see the column names and the rows containing data.
#Now it is time to load up the library in order to sort and clean through the data, and perform analysis techniques.
install.packages("tidyverse")
#Now that the package has been installed, we can go ahead and import the libary.
library(tidyverse)
#Once the library has been imported, we can go ahead and start looking through the dataset. I will start off by checking data types,followed by some data cleaning techniques.
str(df)
colSums(is.na(df))
#The command above searches for missing values in the df. The following command will drop the missing values.
df<-na.omit(df)
#To check whether the values have been dropped or not, we can execute the following command
colSums(is.na(df))
#All missing values haven now been dropped from the df.
#Another step in the data cleaning process is to check for duplicates
dim(df[duplicated(df$Film),])[1]
#To make the df easier to read, we will round off values to 2 decimal places
df$Profitability<-round(df$Profitability.digit=2)
install.packages("tidyverse")
